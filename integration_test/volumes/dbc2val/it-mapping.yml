# Mapping Dog Mode
DogModeOn:
  vss: # taken from not available on VSS
    datatype: bool
    type: attribute
    unit: none
    description: Enable Dog Mode.
  databroker:
    datatype: 1 # BOOL number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 100
  targets:
    Vehicle.Cabin.DogMode: {}

# Mapping Dog Mode Temperature
DogModeTempSet:
  vss: # taken from not available on VSS
    datatype: float
    type: attribute
    unit: celsius
    description: Set desired temperature for Dog Mode.
  databroker:
    datatype: 10 # FLOAT number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 100
  targets:
    Vehicle.Cabin.DogModeTemperature: {}

# Mapping Speed
UIspeed_signed257:
  minupdatedelay: 500
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Vehicle/Vehicle.vspec
    datatype: float
    type: sensor
    unit: km/h
    description: Vehicle speed
  databroker:
    datatype: 10 # FLOAT number taken from types_pb2.py
    changetype: 1 # CONTINUOUS number taken from types_pb2.py
  targets:
    Vehicle.OBD.Speed: {}

# Mapping Power, this is kW do some magic to get in 0-100 int range
RearPower266:
  minupdatedelay: 500
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/OBD/OBD.vspec
    datatype: float
    type: sensor
    unit: percent
    description: PID 04 - Engine load in percent - 0 = no load, 100 = full load
  databroker:
    datatype: 10 # FLOAT number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  targets:
    Vehicle.OBD.EngineLoad:
      transform:
        math: "floor(abs(x/5))"

# Mapping Gears
DIgear118:
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Powertrain/Transmission.vspec
    datatype: int8
    type: sensor
    unit: none
    description: The current gear. 0=Neutral, 1/2/..=Forward, -1/-2/..=Reverse
  databroker:
    datatype: 2 # INT8 number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 1000
  targets:
    Vehicle.Powertrain.Transmission.Gear:
      transform:
        partialmapping:
          Park: 126
          Reverse: -1
          Neutral: 0
          Drive: 127
          Idle: 7

# Mapping Parking brake
ParkingBrake118:
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Chassis/Chassis.vspec
    datatype: boolean
    type: actuator
    unit: none
    description: Parking brake status. True = Parking Brake is Engaged. False = Parking Brake is not Engaged.
  databroker:
    datatype: 1 # BOOL number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 1000
  targets:
    Vehicle.Chassis.ParkingBrake.IsEngaged:
      transform:
        partialmapping:
          Idle: false
          Engage: true
          Disengage: false

# Mapping Ambient Air Temperature
VCRIGHT_hvacCabinTempEst:
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Cabin/HVAC.vspec
    datatype: float
    type: sensor
    unit: celsius
    description: Ambient air temperature inside the vehicle.
  databroker:
    datatype: 10 # FLOAT number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 100
  targets:
    Vehicle.Cabin.AmbientAirTemperature: {}

# Mapping SOC State of Charge
UI_SOC:
  vss: # taken from https://github.com/COVESA/vehicle_signal_specification/blob/master/spec/Powertrain/Battery.vspec
    datatype: float
    type: sensor
    unit: percent
    description: Physical state of charge of the high voltage battery. This is not necessarily the state of charge being displayed to the customer.
  databroker:
    datatype: 10 # FLOAT number taken from types_pb2.py
    changetype: 2 # ON_CHANGE number taken from types_pb2.py
  minupdatedelay: 100
  targets:
    Vehicle.Powertrain.Battery.StateOfCharge.Current: {}

